For 64-bit use: x86_64-w64-mingw32-g++

For 32-bit use: i686-w64-mingw32-g++


"If you are using MingW to compile C++ code on Windows, you may like to add the options -static-libgcc and -static-libstdc++ to link the C and C++ standard libraries statically and thus remove the need to carry around any separate copies of those. Version management of libraries is a pain in Windows, so I've found this approach the quickest and cleanest solution to creating Windows binaries."

Example: x86_64-w64-mingw32-g++ -static-libgcc -static-libstdc++ -o out_name.exe in_name.cpp


How to use 3rd party libraries: https://stackoverflow.com/questions/17887265/how-to-include-third-party-libraries

1. Use the -I compiler option to point to the 3rd party libraries directory (-I/usr/local/include/ohNet)

2. Use #include "[whatever you need from oHNet].h" in your header files and compilation units as needed (Note: you might need to put relative prefix pathes for subdirecories in the 3rd party include paths tree here!)

3. Use the -L linker option to specify a path to the 3rd party libs you need (-L/usr/local/lib probably)

4. Use the -l linker option to specify any concrete 3rd libs you need (-l[oHNet] probably)


Example: x86_64-w64-mingw32-g++ -I/home/gustavo/boost_1_76_0/ -static-libgcc -static-libstdc++ -o 'Monte Carlo Volume'.exe two_variable_monte_carlo.cpp
